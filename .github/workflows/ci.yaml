name: ci

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

jobs:
  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run ESLint
        run: |
          cd frontend
          npm run lint

  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.3

      - uses: golangci/golangci-lint-action@v6
        name: Install golangci-lint
        with:
          version: latest
          # Hack: Use the official action to download, but not run.
          # make lint below will handle actually running the linter.
          args: --help

      - name: Run lint
        run: make lint

  unit-test-backend:
    runs-on: ubuntu-latest
    needs: lint-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.3

      - name: Run unit tests
        run: make unit-test

  integration-test-backend:
    runs-on: ubuntu-latest
    needs: unit-test-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.3

      - name: Run integration tests
        run: make integration-test

  e2e-test:
    runs-on: ubuntu-latest
    needs: integration-test-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.3

      - name: Run E2E Tests
        run: |
          make prepare-env
          make e2e-test 

  upload-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.3

      - name: Install gocovmerge
        run: |
          go install github.com/wadey/gocovmerge@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Run tests and merge coverage
        run: make coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage_total.out
          fail_ci_if_error: true
